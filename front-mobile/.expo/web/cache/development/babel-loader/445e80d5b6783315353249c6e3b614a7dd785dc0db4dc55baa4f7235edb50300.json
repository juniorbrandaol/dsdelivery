{"ast":null,"code":"import View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Linking from \"react-native-web/dist/exports/Linking\";\nimport styles from \"./styles\";\nimport { useNavigation } from '@react-navigation/native';\nimport { RectButton } from 'react-native-gesture-handler';\nimport Header from \"../Header\";\nimport OrderCard from \"../OrderCard\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nexport default function OrderDatails(_ref) {\n  var route = _ref.route;\n  var navigation = useNavigation();\n  var order = route.params.order;\n  var handleOnCancel = function handleOnCancel() {\n    navigation.navigate('Orders');\n  };\n  var handleStartNavigation = function handleStartNavigation() {\n    Linking.openURL(\"https://www.google.com/maps/dir/?api=1&travelmode=driving&dir_action=navigate&destination=\" + order.latitude + \",\" + order.longitude);\n  };\n  return _jsxs(_Fragment, {\n    children: [_jsx(Header, {}), _jsxs(View, {\n      style: styles.container,\n      children: [_jsx(OrderCard, {\n        order: order\n      }), _jsx(RectButton, {\n        style: styles.button,\n        onPress: handleStartNavigation,\n        children: _jsx(Text, {\n          style: styles.buttonText,\n          children: \"INICIAR NAVEGA\\xC7\\xC3O\"\n        })\n      }), _jsx(RectButton, {\n        style: styles.button,\n        children: _jsx(Text, {\n          style: styles.buttonText,\n          children: \"CONFIRMAR ENTREGA\"\n        })\n      }), _jsx(RectButton, {\n        style: styles.button,\n        onPress: handleOnCancel,\n        children: _jsx(Text, {\n          style: styles.buttonText,\n          children: \"CANCELAR\"\n        })\n      })]\n    })]\n  });\n}","map":{"version":3,"names":["styles","useNavigation","RectButton","Header","OrderCard","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","OrderDatails","_ref","route","navigation","order","params","handleOnCancel","navigate","handleStartNavigation","Linking","openURL","latitude","longitude","children","View","style","container","button","onPress","Text","buttonText"],"sources":["C:/junior/projetos/dsdelivery/front-mobile/src/components/OrderDetails/index.tsx"],"sourcesContent":["import {View,Text,Alert,Linking} from 'react-native'\r\nimport styles from \"./styles\";\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport {RectButton} from 'react-native-gesture-handler'\r\nimport Header from '../Header';\r\nimport { Order } from '../../models/Order';\r\nimport OrderCard from '../OrderCard';\r\n//API\r\nimport userService from \"../../Services/apiServices/api\";\r\n\r\ntype Props={\r\n  route:{\r\n    params:{\r\n      order:Order;\r\n    }\r\n  }\r\n}\r\n\r\nexport default function OrderDatails({route}:Props) {\r\n    \r\n  const navigation = useNavigation();\r\n  const {order} = route.params;\r\n\r\n  const  handleOnCancel=()=>{\r\n    navigation.navigate('Orders')\r\n  }\r\n/*\r\n  const  handleConfirmDelivery=async()=>{\r\n    try{\r\n      await userService.confirmDelivery(order.id).then(()=>{\r\n        Alert.alert(`Pedido ${order.id} entregue.`);   \r\n        navigation.navigate('Orders');\r\n      })\r\n    }\r\n    catch(error){\r\n       Alert.alert(`Erro ao confirmar entrega do pedido ${order.id}`);\r\n    }\r\n  }\r\n*/\r\n  const handleStartNavigation=()=>{\r\n     Linking.openURL(`https://www.google.com/maps/dir/?api=1&travelmode=driving&dir_action=navigate&destination=${order.latitude},${order.longitude}`)\r\n  }\r\n//onPress={()=>handleConfirmDelivery()}\r\n  return (\r\n    <>\r\n       <Header/> \r\n        <View style={styles.container}>\r\n          <OrderCard order={order}/>\r\n          <RectButton style={styles.button} onPress={handleStartNavigation}>\r\n             <Text style={styles.buttonText}>INICIAR NAVEGAÇÃO</Text>\r\n          </RectButton>\r\n          <RectButton style={styles.button} >\r\n             <Text style={styles.buttonText}>CONFIRMAR ENTREGA</Text>\r\n          </RectButton>\r\n          <RectButton style={styles.button} onPress={handleOnCancel}>\r\n             <Text style={styles.buttonText}>CANCELAR</Text>\r\n          </RectButton>\r\n        </View>\r\n     </>\r\n  );\r\n}\r\n\r\n"],"mappings":";;;AACA,OAAOA,MAAM;AACb,SAASC,aAAa,QAAQ,0BAA0B;AACxD,SAAQC,UAAU,QAAO,8BAA8B;AACvD,OAAOC,MAAM;AAEb,OAAOC,SAAS;AAAqB,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAYrC,eAAe,SAASC,YAAYA,CAAAC,IAAA,EAAgB;EAAA,IAAdC,KAAK,GAAAD,IAAA,CAALC,KAAK;EAEzC,IAAMC,UAAU,GAAGb,aAAa,EAAE;EAClC,IAAOc,KAAK,GAAIF,KAAK,CAACG,MAAM,CAArBD,KAAK;EAEZ,IAAOE,cAAc,GAAC,SAAfA,cAAcA,CAAA,EAAK;IACxBH,UAAU,CAACI,QAAQ,CAAC,QAAQ,CAAC;EAC/B,CAAC;EAcD,IAAMC,qBAAqB,GAAC,SAAtBA,qBAAqBA,CAAA,EAAK;IAC7BC,OAAO,CAACC,OAAO,gGAA8FN,KAAK,CAACO,QAAQ,SAAIP,KAAK,CAACQ,SAAS,CAAG;EACpJ,CAAC;EAED,OACEf,KAAA,CAAAE,SAAA;IAAAc,QAAA,GACGlB,IAAA,CAACH,MAAM,KAAE,EACRK,KAAA,CAACiB,IAAI;MAACC,KAAK,EAAE1B,MAAM,CAAC2B,SAAU;MAAAH,QAAA,GAC5BlB,IAAA,CAACF,SAAS;QAACW,KAAK,EAAEA;MAAM,EAAE,EAC1BT,IAAA,CAACJ,UAAU;QAACwB,KAAK,EAAE1B,MAAM,CAAC4B,MAAO;QAACC,OAAO,EAAEV,qBAAsB;QAAAK,QAAA,EAC9DlB,IAAA,CAACwB,IAAI;UAACJ,KAAK,EAAE1B,MAAM,CAAC+B,UAAW;UAAAP,QAAA,EAAC;QAAiB;MAAO,EAC9C,EACblB,IAAA,CAACJ,UAAU;QAACwB,KAAK,EAAE1B,MAAM,CAAC4B,MAAO;QAAAJ,QAAA,EAC9BlB,IAAA,CAACwB,IAAI;UAACJ,KAAK,EAAE1B,MAAM,CAAC+B,UAAW;UAAAP,QAAA,EAAC;QAAiB;MAAO,EAC9C,EACblB,IAAA,CAACJ,UAAU;QAACwB,KAAK,EAAE1B,MAAM,CAAC4B,MAAO;QAACC,OAAO,EAAEZ,cAAe;QAAAO,QAAA,EACvDlB,IAAA,CAACwB,IAAI;UAACJ,KAAK,EAAE1B,MAAM,CAAC+B,UAAW;UAAAP,QAAA,EAAC;QAAQ;MAAO,EACrC;IAAA,EACR;EAAA,EACP;AAER"},"metadata":{},"sourceType":"module","externalDependencies":[]}