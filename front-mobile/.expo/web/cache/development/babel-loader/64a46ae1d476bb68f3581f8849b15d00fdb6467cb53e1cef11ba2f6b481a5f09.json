{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport styles from \"./styles\";\nimport Header from \"../Header\";\nimport OrderCard from \"../OrderCard\";\nimport { useEffect, useState } from 'react';\nimport { TouchableWithoutFeedback } from 'react-native-gesture-handler';\nimport { useNavigation, useIsFocused } from '@react-navigation/native';\nimport userService from \"../../apiServices/api\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Orders() {\n  var navigation = useNavigation();\n  var isFocused = useIsFocused();\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isLoading = _useState2[0],\n    setIsLoading = _useState2[1];\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    orders = _useState4[0],\n    setOrders = _useState4[1];\n  useEffect(function () {\n    if (isFocused) {\n      fetchOrders();\n    }\n  }, [isFocused]);\n  var fetchOrders = function () {\n    var _ref = _asyncToGenerator(function* () {\n      setIsLoading(true);\n      try {\n        yield userService.findAllOrders().then(function (response) {\n          setOrders(response.data);\n        });\n      } catch (error) {\n        console.log(error);\n        Alert.alert('Erro ao carregar pedidos');\n      } finally {\n        setIsLoading(false);\n      }\n    });\n    return function fetchOrders() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  var handleOnPress = function handleOnPress(order) {\n    navigation.navigate('OrdersDetails', {\n      order: order\n    });\n  };\n  return _jsxs(_Fragment, {\n    children: [_jsx(Header, {}), _jsx(ScrollView, {\n      style: styles.container,\n      children: isLoading ? _jsx(Text, {\n        children: \"Buscando pedidos....\"\n      }) : orders.map(function (item) {\n        return _jsx(TouchableWithoutFeedback, {\n          onPress: function onPress() {\n            return handleOnPress(item);\n          },\n          children: _jsx(OrderCard, {\n            order: item\n          })\n        }, item.id);\n      })\n    })]\n  });\n}","map":{"version":3,"names":["styles","Header","OrderCard","useEffect","useState","TouchableWithoutFeedback","useNavigation","useIsFocused","userService","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","Orders","navigation","isFocused","_useState","_useState2","_slicedToArray","isLoading","setIsLoading","_useState3","_useState4","orders","setOrders","fetchOrders","_ref","_asyncToGenerator","findAllOrders","then","response","data","error","console","log","Alert","alert","apply","arguments","handleOnPress","order","navigate","children","ScrollView","style","container","Text","map","item","onPress","id"],"sources":["C:/junior/projetos/dsdelivery/front-mobile/src/components/Orders/index.tsx"],"sourcesContent":["import {ScrollView,Alert,Text} from 'react-native'\r\nimport styles from \"./styles\";\r\nimport Header from '../Header';\r\nimport OrderCard from '../OrderCard';\r\nimport { useEffect, useState } from 'react';\r\nimport { Order } from '../../models/Order';\r\nimport {TouchableWithoutFeedback} from 'react-native-gesture-handler'\r\nimport { useNavigation,useIsFocused } from '@react-navigation/native';\r\n//API\r\nimport userService from \"../../apiServices/api\";\r\n\r\nexport default function Orders() {\r\n\r\n  const navigation = useNavigation();\r\n  const isFocused = useIsFocused();\r\n\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [orders,setOrders]= useState<Order[]>([]);\r\n\r\n  useEffect(()=>{\r\n    if(isFocused){\r\n      fetchOrders();\r\n    }\r\n  },[isFocused])\r\n\r\n  const fetchOrders = async () => {\r\n    setIsLoading(true);\r\n    try{\r\n       await userService.findAllOrders().then(response=>{\r\n          setOrders(response.data);\r\n       })\r\n    }\r\n    catch(error){\r\n      console.log(error)\r\n      Alert.alert('Erro ao carregar pedidos');\r\n    }\r\n    finally{\r\n      setIsLoading(false);\r\n    }\r\n }\r\n\r\n const  handleOnPress=(order:Order)=>{\r\n  navigation.navigate('OrdersDetails',{\r\n      order\r\n  });\r\n }\r\n\r\n  return (\r\n    <>\r\n      <Header/>\r\n        <ScrollView  style={styles.container}>\r\n         {\r\n           isLoading ? (\r\n            <Text>Buscando pedidos....</Text>\r\n           ):\r\n           (\r\n            orders.map(item=>(\r\n              <TouchableWithoutFeedback \r\n                 key={item.id}\r\n                 onPress={()=>handleOnPress(item)}\r\n              >\r\n                 <OrderCard order={item}/>\r\n              </TouchableWithoutFeedback>\r\n            ))\r\n           )\r\n         }\r\n      </ScrollView>\r\n    </>\r\n  );\r\n}\r\n\r\n"],"mappings":";;;;;AACA,OAAOA,MAAM;AACb,OAAOC,MAAM;AACb,OAAOC,SAAS;AAChB,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAE3C,SAAQC,wBAAwB,QAAO,8BAA8B;AACrE,SAASC,aAAa,EAACC,YAAY,QAAQ,0BAA0B;AAErE,OAAOC,WAAW;AAA8B,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAEhD,eAAe,SAASC,MAAMA,CAAA,EAAG;EAE/B,IAAMC,UAAU,GAAGV,aAAa,EAAE;EAClC,IAAMW,SAAS,GAAGV,YAAY,EAAE;EAEhC,IAAAW,SAAA,GAAkCd,QAAQ,CAAC,KAAK,CAAC;IAAAe,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA1CG,SAAS,GAAAF,UAAA;IAAEG,YAAY,GAAAH,UAAA;EAC9B,IAAAI,UAAA,GAA0BnB,QAAQ,CAAU,EAAE,CAAC;IAAAoB,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAAxCE,MAAM,GAAAD,UAAA;IAACE,SAAS,GAAAF,UAAA;EAEvBrB,SAAS,CAAC,YAAI;IACZ,IAAGc,SAAS,EAAC;MACXU,WAAW,EAAE;IACf;EACF,CAAC,EAAC,CAACV,SAAS,CAAC,CAAC;EAEd,IAAMU,WAAW;IAAA,IAAAC,IAAA,GAAAC,iBAAA,CAAG,aAAY;MAC9BP,YAAY,CAAC,IAAI,CAAC;MAClB,IAAG;QACA,MAAMd,WAAW,CAACsB,aAAa,EAAE,CAACC,IAAI,CAAC,UAAAC,QAAQ,EAAE;UAC9CN,SAAS,CAACM,QAAQ,CAACC,IAAI,CAAC;QAC3B,CAAC,CAAC;MACL,CAAC,CACD,OAAMC,KAAK,EAAC;QACVC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;QAClBG,KAAK,CAACC,KAAK,CAAC,0BAA0B,CAAC;MACzC,CAAC,SACM;QACLhB,YAAY,CAAC,KAAK,CAAC;MACrB;IACH,CAAC;IAAA,gBAdMK,WAAWA,CAAA;MAAA,OAAAC,IAAA,CAAAW,KAAA,OAAAC,SAAA;IAAA;EAAA,GAcjB;EAED,IAAOC,aAAa,GAAC,SAAdA,aAAaA,CAAEC,KAAW,EAAG;IACnC1B,UAAU,CAAC2B,QAAQ,CAAC,eAAe,EAAC;MAChCD,KAAK,EAALA;IACJ,CAAC,CAAC;EACH,CAAC;EAEA,OACE5B,KAAA,CAAAF,SAAA;IAAAgC,QAAA,GACElC,IAAA,CAACT,MAAM,KAAE,EACPS,IAAA,CAACmC,UAAU;MAAEC,KAAK,EAAE9C,MAAM,CAAC+C,SAAU;MAAAH,QAAA,EAElCvB,SAAS,GACRX,IAAA,CAACsC,IAAI;QAAAJ,QAAA,EAAC;MAAoB,EAAO,GAGjCnB,MAAM,CAACwB,GAAG,CAAC,UAAAC,IAAI;QAAA,OACbxC,IAAA,CAACL,wBAAwB;UAEtB8C,OAAO,EAAE,SAAAA,QAAA;YAAA,OAAIV,aAAa,CAACS,IAAI,CAAC;UAAA,CAAC;UAAAN,QAAA,EAEjClC,IAAA,CAACR,SAAS;YAACwC,KAAK,EAAEQ;UAAK;QAAE,GAHpBA,IAAI,CAACE,EAAE,CAIY;MAAA,CAC5B;IACD,EAEO;EAAA,EACZ;AAEP"},"metadata":{},"sourceType":"module","externalDependencies":[]}