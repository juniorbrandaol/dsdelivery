{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { StatusBar } from 'expo-status-bar';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { useFonts, OpenSans_400Regular, OpenSans_700Bold } from '@expo-google-fonts/open-sans';\nimport Routes from \"./src/routes/Routes\";\nimport AppLoading from 'expo-app-loading';\nimport FlashMessage from \"react-native-flash-message\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function App() {\n  var _useFonts = useFonts({\n      OpenSans_700Bold: OpenSans_700Bold,\n      OpenSans_400Regular: OpenSans_400Regular\n    }),\n    _useFonts2 = _slicedToArray(_useFonts, 1),\n    fontsLoaded = _useFonts2[0];\n  if (!fontsLoaded) {\n    _jsx(AppLoading, {});\n  }\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(StatusBar, {\n      style: \"auto\"\n    }), _jsx(Routes, {}), _jsx(FlashMessage, {\n      style: {\n        elevation: 10\n      },\n      position: \"top\"\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  }\n});","map":{"version":3,"names":["StatusBar","StyleSheet","View","useFonts","OpenSans_400Regular","OpenSans_700Bold","Routes","AppLoading","FlashMessage","jsx","_jsx","jsxs","_jsxs","App","_useFonts","_useFonts2","_slicedToArray","fontsLoaded","style","styles","container","children","elevation","position","create","flex"],"sources":["C:/junior/projetos/dsdelivery/front-mobile/App.tsx"],"sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport { StyleSheet, View } from 'react-native';\nimport { useFonts,OpenSans_400Regular,OpenSans_700Bold } from '@expo-google-fonts/open-sans';\nimport Routes from './src/routes/Routes';\nimport AppLoading from 'expo-app-loading';\nimport FlashMessage from \"react-native-flash-message\";\n\nexport default function App() {\n\n  let[fontsLoaded ]= useFonts({\n    OpenSans_700Bold,\n    OpenSans_400Regular\n  });\n  if(!fontsLoaded){\n   <AppLoading/>\n  }\n\n  return (\n    <View style={styles.container}>\n      <StatusBar style=\"auto\" />\n     < Routes/>\n     <FlashMessage style={{ elevation: 10 }} position=\"top\" />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n});\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,iBAAiB;AAAC,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAE5C,SAASC,QAAQ,EAACC,mBAAmB,EAACC,gBAAgB,QAAQ,8BAA8B;AAC5F,OAAOC,MAAM;AACb,OAAOC,UAAU,MAAM,kBAAkB;AACzC,OAAOC,YAAY,MAAM,4BAA4B;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAEtD,eAAe,SAASC,GAAGA,CAAA,EAAG;EAE5B,IAAAC,SAAA,GAAmBX,QAAQ,CAAC;MAC1BE,gBAAgB,EAAhBA,gBAAgB;MAChBD,mBAAmB,EAAnBA;IACF,CAAC,CAAC;IAAAW,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAHEG,WAAW,GAAAF,UAAA;EAIf,IAAG,CAACE,WAAW,EAAC;IACfP,IAAA,CAACH,UAAU,KAAE;EACd;EAEA,OACEK,KAAA,CAACV,IAAI;IAACgB,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,GAC5BX,IAAA,CAACV,SAAS;MAACkB,KAAK,EAAC;IAAM,EAAG,EAC3BR,IAAA,CAAEJ,MAAM,KAAE,EACVI,IAAA,CAACF,YAAY;MAACU,KAAK,EAAE;QAAEI,SAAS,EAAE;MAAG,CAAE;MAACC,QAAQ,EAAC;IAAK,EAAG;EAAA,EACnD;AAEX;AAEA,IAAMJ,MAAM,GAAGlB,UAAU,CAACuB,MAAM,CAAC;EAC/BJ,SAAS,EAAE;IACTK,IAAI,EAAE;EACR;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}