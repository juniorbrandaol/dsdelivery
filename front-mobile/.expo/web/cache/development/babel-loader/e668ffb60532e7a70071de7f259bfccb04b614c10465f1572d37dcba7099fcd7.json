{"ast":null,"code":"import Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { showMessage, hideMessage } from \"react-native-flash-message\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nexport default Message = function Message(msg, type, position, confirmation) {\n  var floating = Platform.OS === 'ios' ? false : true;\n  var widthTop = Platform.OS === 'ios' ? '100%' : '95%';\n  var width = '95%';\n  if (position == 'top') {\n    width = widthTop;\n  }\n  var cancelButton = function cancelButton() {\n    hideMessage();\n  };\n  var confirmButton = function confirmButton() {\n    console.log('confirmou');\n  };\n  var optionButton = function optionButton() {\n    if (confirmation == true) {\n      return _jsxs(View, {\n        style: {\n          flexDirection: 'row',\n          width: '100%',\n          marginTop: 5,\n          justifyContent: 'center',\n          alignSelf: 'center',\n          alignItems: 'center'\n        },\n        children: [_jsx(TouchableOpacity, {\n          style: {\n            width: 100,\n            height: 35,\n            alignItems: 'center',\n            justifyContent: 'center',\n            borderRightColor: '#979797',\n            borderRightWidth: 0.5\n          },\n          onPress: function onPress() {\n            return cancelButton();\n          },\n          children: _jsx(Text, {\n            style: {\n              color: '#FFF',\n              fontSize: 18,\n              width: 90,\n              height: 25,\n              alignSelf: 'center',\n              textAlign: 'center'\n            },\n            children: \"Cancelar\"\n          })\n        }), _jsx(TouchableOpacity, {\n          style: {\n            width: 100,\n            height: 35,\n            alignItems: 'center',\n            justifyContent: 'center',\n            borderLeftColor: '#979797',\n            borderLeftWidth: 0.5\n          },\n          onPress: function onPress() {\n            return confirmButton();\n          },\n          children: _jsx(Text, {\n            style: {\n              color: '#FFF',\n              fontSize: 18,\n              width: 90,\n              height: 25,\n              alignSelf: 'center',\n              textAlign: 'center'\n            },\n            children: \"Confirmar\"\n          })\n        })]\n      });\n    } else {\n      return _jsx(_Fragment, {});\n    }\n  };\n  showMessage({\n    message: msg,\n    type: type,\n    position: position,\n    autoHide: confirmation ? false : true,\n    hideOnPress: confirmation ? false : true,\n    icon: 'auto',\n    duration: 3000,\n    color: \"#fff\",\n    hideStatusBar: false,\n    statusBarHeight: 0,\n    animated: true,\n    floating: floating,\n    renderCustomContent: function renderCustomContent() {\n      return optionButton();\n    },\n    icon: {\n      icon: 'auto',\n      width: 40,\n      height: 40,\n      position: 'left'\n    },\n    titleStyle: {\n      width: '100%',\n      textAlign: 'center',\n      alignSelf: 'center',\n      justifyContent: 'center',\n      alignItems: 'center',\n      fontSize: 15\n    },\n    textStyle: {\n      justifyContent: 'center',\n      textAlign: 'justify',\n      alignSelf: 'center',\n      fontSize: 15\n    },\n    style: {\n      width: width,\n      alignItems: \"center\",\n      textAlign: 'center',\n      alignSelf: 'center',\n      height: 90\n    }\n  });\n};","map":{"version":3,"names":["showMessage","hideMessage","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Message","msg","type","position","confirmation","floating","Platform","OS","widthTop","width","cancelButton","confirmButton","console","log","optionButton","View","style","flexDirection","marginTop","justifyContent","alignSelf","alignItems","children","TouchableOpacity","height","borderRightColor","borderRightWidth","onPress","Text","color","fontSize","textAlign","borderLeftColor","borderLeftWidth","message","autoHide","hideOnPress","icon","duration","hideStatusBar","statusBarHeight","animated","renderCustomContent","titleStyle","textStyle"],"sources":["C:/junior/projetos/dsdelivery/front-mobile/src/utils/Messages/index.js"],"sourcesContent":["import { Text, View, TouchableOpacity } from \"react-native\";\r\nimport { showMessage, hideMessage } from \"react-native-flash-message\";\r\n\r\n\r\nexport default Message = (msg, type, position, confirmation) => {\r\n\r\n  const floating = Platform.OS === 'ios' ? false : true\r\n  const widthTop = Platform.OS === 'ios' ? '100%' :'95%'\r\n\r\n  /* HERE WE GONE SHOW OUR FIRST MESSAGE \r\n     TYPE: The type attribute set the type and color of your flash message, \r\n     default options are \"success\" (green), \"warning\" (orange), \"danger\" (red), \"info\" (blue) and \"default\" (gray).\r\n     POSITION: set the position of a flash message  Expected options: \"top\" (default), \"bottom\", \"center\"\r\n     FLOATING: DEFINES THE BEHAVIOR OF THE MESSAGE AT THE TOP. ON ANDROID DEVICES IT MUST BE SET TO TRUE\r\n     ICON: (default), \"auto\" \"success\", \"info\", \"warning\", \"danger\" OR CUSTON\r\n     CONFIRMATION(TRUE OR FALSE) : IF CONFIRMATION EXISTS, AN ACTION CANCEL AND CONFIRMATION BUTTONS WILL BE REDERIZED\r\n  */\r\n  let width = '95%'\r\n  if (position == 'top') {\r\n    width = widthTop\r\n  }\r\n\r\n  const cancelButton = () => {\r\n    hideMessage()\r\n  }\r\n\r\n  const confirmButton = () => {\r\n\r\n    console.log('confirmou')\r\n  }\r\n\r\n  const optionButton = () => {\r\n    if (confirmation == true) {\r\n      return (\r\n        <View\r\n          style={{\r\n            flexDirection: 'row',\r\n            width: '100%',\r\n            //  backgroundColor:'yellow',\r\n            marginTop: 5,\r\n            justifyContent: 'center',\r\n            alignSelf: 'center',\r\n            alignItems: 'center'\r\n          }}\r\n        >\r\n          <TouchableOpacity\r\n            style={{\r\n              width: 100,\r\n              height: 35,\r\n              //    backgroundColor:'blue',\r\n              alignItems: 'center',\r\n              justifyContent: 'center',\r\n              borderRightColor: '#979797',\r\n              borderRightWidth: 0.5\r\n            }}\r\n            onPress={() => cancelButton()}\r\n          >\r\n            <Text\r\n              style={{\r\n                color: '#FFF',\r\n                fontSize: 18,\r\n                //    backgroundColor:'green',\r\n                width: 90,\r\n                height: 25,\r\n                alignSelf: 'center',\r\n                textAlign: 'center'\r\n              }}\r\n            >Cancelar</Text>\r\n          </TouchableOpacity>\r\n          <TouchableOpacity\r\n            style={{\r\n              width: 100,\r\n              height: 35,\r\n              //    backgroundColor:'blue',\r\n              alignItems: 'center',\r\n              justifyContent: 'center',\r\n              borderLeftColor: '#979797',\r\n              borderLeftWidth: 0.5\r\n            }}\r\n            onPress={() => confirmButton()}\r\n          >\r\n            <Text\r\n              style={{\r\n                color: '#FFF',\r\n                fontSize: 18,\r\n                //   backgroundColor:'green',\r\n                width: 90,\r\n                height: 25,\r\n                alignSelf: 'center',\r\n                textAlign: 'center'\r\n              }}\r\n            >Confirmar</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      )\r\n    } else {\r\n      return <></>\r\n    }\r\n  }\r\n\r\n  showMessage({\r\n\r\n    message: msg,\r\n    type: type,\r\n    position: position,\r\n    autoHide: confirmation ? false : true,\r\n    hideOnPress: confirmation ? false : true,\r\n    icon: 'auto',\r\n    duration: 3000,\r\n    color: \"#fff\",\r\n    hideStatusBar: false,\r\n    statusBarHeight:0,\r\n    animated: true,\r\n    floating: floating,\r\n    renderCustomContent: (() => optionButton()),\r\n\r\n    icon: {\r\n      icon: 'auto',\r\n      width: 40,\r\n      height: 40,\r\n      position: 'left',\r\n    },\r\n    //estiliza o description\r\n    titleStyle: {\r\n      width:'100%',\r\n      textAlign: 'center',\r\n      alignSelf: 'center',\r\n      justifyContent:'center',\r\n      alignItems: 'center', \r\n      fontSize: 15,\r\n      //fontWeight: 'bold'\r\n    },\r\n    //estiliza o description\r\n    textStyle: {\r\n      justifyContent:'center',\r\n      textAlign: 'justify',\r\n      alignSelf: 'center',\r\n      fontSize: 15,\r\n    },\r\n    style: {\r\n      width: width,    \r\n      alignItems: \"center\",\r\n      textAlign: 'center',\r\n      alignSelf: 'center',\r\n      height: 90\r\n    },\r\n\r\n  });\r\n\r\n}"],"mappings":";;;AACA,SAASA,WAAW,EAAEC,WAAW,QAAQ,4BAA4B;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAGtE,eAAeC,OAAO,GAAG,SAAAA,QAACC,GAAG,EAAEC,IAAI,EAAEC,QAAQ,EAAEC,YAAY,EAAK;EAE9D,IAAMC,QAAQ,GAAGC,QAAQ,CAACC,EAAE,KAAK,KAAK,GAAG,KAAK,GAAG,IAAI;EACrD,IAAMC,QAAQ,GAAGF,QAAQ,CAACC,EAAE,KAAK,KAAK,GAAG,MAAM,GAAE,KAAK;EAUtD,IAAIE,KAAK,GAAG,KAAK;EACjB,IAAIN,QAAQ,IAAI,KAAK,EAAE;IACrBM,KAAK,GAAGD,QAAQ;EAClB;EAEA,IAAME,YAAY,GAAG,SAAfA,YAAYA,CAAA,EAAS;IACzBjB,WAAW,EAAE;EACf,CAAC;EAED,IAAMkB,aAAa,GAAG,SAAhBA,aAAaA,CAAA,EAAS;IAE1BC,OAAO,CAACC,GAAG,CAAC,WAAW,CAAC;EAC1B,CAAC;EAED,IAAMC,YAAY,GAAG,SAAfA,YAAYA,CAAA,EAAS;IACzB,IAAIV,YAAY,IAAI,IAAI,EAAE;MACxB,OACEP,KAAA,CAACkB,IAAI;QACHC,KAAK,EAAE;UACLC,aAAa,EAAE,KAAK;UACpBR,KAAK,EAAE,MAAM;UAEbS,SAAS,EAAE,CAAC;UACZC,cAAc,EAAE,QAAQ;UACxBC,SAAS,EAAE,QAAQ;UACnBC,UAAU,EAAE;QACd,CAAE;QAAAC,QAAA,GAEF3B,IAAA,CAAC4B,gBAAgB;UACfP,KAAK,EAAE;YACLP,KAAK,EAAE,GAAG;YACVe,MAAM,EAAE,EAAE;YAEVH,UAAU,EAAE,QAAQ;YACpBF,cAAc,EAAE,QAAQ;YACxBM,gBAAgB,EAAE,SAAS;YAC3BC,gBAAgB,EAAE;UACpB,CAAE;UACFC,OAAO,EAAE,SAAAA,QAAA;YAAA,OAAMjB,YAAY,EAAE;UAAA,CAAC;UAAAY,QAAA,EAE9B3B,IAAA,CAACiC,IAAI;YACHZ,KAAK,EAAE;cACLa,KAAK,EAAE,MAAM;cACbC,QAAQ,EAAE,EAAE;cAEZrB,KAAK,EAAE,EAAE;cACTe,MAAM,EAAE,EAAE;cACVJ,SAAS,EAAE,QAAQ;cACnBW,SAAS,EAAE;YACb,CAAE;YAAAT,QAAA,EACH;UAAQ;QAAO,EACC,EACnB3B,IAAA,CAAC4B,gBAAgB;UACfP,KAAK,EAAE;YACLP,KAAK,EAAE,GAAG;YACVe,MAAM,EAAE,EAAE;YAEVH,UAAU,EAAE,QAAQ;YACpBF,cAAc,EAAE,QAAQ;YACxBa,eAAe,EAAE,SAAS;YAC1BC,eAAe,EAAE;UACnB,CAAE;UACFN,OAAO,EAAE,SAAAA,QAAA;YAAA,OAAMhB,aAAa,EAAE;UAAA,CAAC;UAAAW,QAAA,EAE/B3B,IAAA,CAACiC,IAAI;YACHZ,KAAK,EAAE;cACLa,KAAK,EAAE,MAAM;cACbC,QAAQ,EAAE,EAAE;cAEZrB,KAAK,EAAE,EAAE;cACTe,MAAM,EAAE,EAAE;cACVJ,SAAS,EAAE,QAAQ;cACnBW,SAAS,EAAE;YACb,CAAE;YAAAT,QAAA,EACH;UAAS;QAAO,EACA;MAAA,EACd;IAEX,CAAC,MAAM;MACL,OAAO3B,IAAA,CAAAI,SAAA,KAAK;IACd;EACF,CAAC;EAEDP,WAAW,CAAC;IAEV0C,OAAO,EAAEjC,GAAG;IACZC,IAAI,EAAEA,IAAI;IACVC,QAAQ,EAAEA,QAAQ;IAClBgC,QAAQ,EAAE/B,YAAY,GAAG,KAAK,GAAG,IAAI;IACrCgC,WAAW,EAAEhC,YAAY,GAAG,KAAK,GAAG,IAAI;IACxCiC,IAAI,EAAE,MAAM;IACZC,QAAQ,EAAE,IAAI;IACdT,KAAK,EAAE,MAAM;IACbU,aAAa,EAAE,KAAK;IACpBC,eAAe,EAAC,CAAC;IACjBC,QAAQ,EAAE,IAAI;IACdpC,QAAQ,EAAEA,QAAQ;IAClBqC,mBAAmB,EAAG,SAAAA,oBAAA;MAAA,OAAM5B,YAAY,EAAE;IAAA,CAAC;IAE3CuB,IAAI,EAAE;MACJA,IAAI,EAAE,MAAM;MACZ5B,KAAK,EAAE,EAAE;MACTe,MAAM,EAAE,EAAE;MACVrB,QAAQ,EAAE;IACZ,CAAC;IAEDwC,UAAU,EAAE;MACVlC,KAAK,EAAC,MAAM;MACZsB,SAAS,EAAE,QAAQ;MACnBX,SAAS,EAAE,QAAQ;MACnBD,cAAc,EAAC,QAAQ;MACvBE,UAAU,EAAE,QAAQ;MACpBS,QAAQ,EAAE;IAEZ,CAAC;IAEDc,SAAS,EAAE;MACTzB,cAAc,EAAC,QAAQ;MACvBY,SAAS,EAAE,SAAS;MACpBX,SAAS,EAAE,QAAQ;MACnBU,QAAQ,EAAE;IACZ,CAAC;IACDd,KAAK,EAAE;MACLP,KAAK,EAAEA,KAAK;MACZY,UAAU,EAAE,QAAQ;MACpBU,SAAS,EAAE,QAAQ;MACnBX,SAAS,EAAE,QAAQ;MACnBI,MAAM,EAAE;IACV;EAEF,CAAC,CAAC;AAEJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}