{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { RectButton } from 'react-native-gesture-handler';\nimport styles from \"./styles\";\nimport { useNavigation } from '@react-navigation/native';\nimport userService from \"../../Services/apiServices/api\";\nimport Storage from \"../../Services/storageServices/Storage\";\nimport Messages from \"../../utils/Messages\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nexport default function Login() {\n  var navigation = useNavigation();\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    email = _useState2[0],\n    setEmail = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  var keyboardVerticalOffset = Platform.OS === 'ios' ? -100 : 0;\n  var behavior = Platform.OS === 'ios' ? \"position\" : 'position';\n  var data = {\n    email: email,\n    password: password\n  };\n  var handleOnPressSend = function () {\n    var _ref = _asyncToGenerator(function* () {\n      if (checkInputs() === false) {\n        return;\n      }\n      try {\n        var auth = yield userService.auth(data);\n        Storage.setToken(auth.data.token);\n        checkIsUserHasVehicle();\n      } catch (error) {\n        Messages(\"\" + error, 'danger', 'top');\n      }\n    });\n    return function handleOnPressSend() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  var checkIsUserHasVehicle = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      var userId = yield userService.authenticatedUser();\n      try {\n        yield userService.fetchVehicleByuserId(userId.data.id);\n        navigation.navigate('Orders');\n      } catch (error) {\n        Messages(\"Você não tem um veículo cadastrado.\", 'danger', 'top');\n        navigation.navigate('RegisterVehicle');\n      }\n    });\n    return function checkIsUserHasVehicle() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var handleOnPressRegister = function handleOnPressRegister() {\n    navigation.navigate('Register');\n  };\n  var checkInputs = function checkInputs() {\n    if (email === \"\") {\n      Messages('Informe o email. ', 'warning', 'top');\n      return false;\n    }\n    if (password === \"\") {\n      Messages('Informe a senha. ', 'warning', 'top');\n      return false;\n    }\n    return true;\n  };\n  return _jsx(_Fragment, {\n    children: _jsxs(View, {\n      style: styles.container,\n      children: [_jsx(Image, {\n        style: styles.image_login,\n        source: require(\"../../assets/deliveryman.png\")\n      }), _jsx(Text, {\n        style: styles.title,\n        children: \"Fa\\xE7a seu Login\"\n      }), _jsx(KeyboardAvoidingView, {\n        style: {\n          flex: 1\n        },\n        behavior: behavior,\n        keyboardVerticalOffset: keyboardVerticalOffset,\n        children: _jsxs(ScrollView, {\n          style: {\n            height: '100%'\n          },\n          keyboardShouldPersistTaps: \"handled\",\n          children: [_jsxs(View, {\n            style: styles.content,\n            children: [_jsx(TextInput, {\n              style: styles.text_Input,\n              placeholder: \"Email\",\n              onChangeText: function onChangeText(value) {\n                return setEmail(value);\n              },\n              keyboardType: 'email-address'\n            }), _jsx(TextInput, {\n              style: styles.text_Input,\n              placeholder: \"Senha\",\n              onChangeText: function onChangeText(value) {\n                return setPassword(value);\n              },\n              secureTextEntry: true\n            })]\n          }), _jsxs(View, {\n            style: styles.footer,\n            children: [_jsx(RectButton, {\n              style: styles.button,\n              onPress: handleOnPressSend,\n              children: _jsx(Text, {\n                style: styles.buttonText,\n                children: \"ENVIAR\"\n              })\n            }), _jsx(RectButton, {\n              style: styles.button,\n              onPress: handleOnPressRegister,\n              children: _jsx(Text, {\n                style: styles.buttonText,\n                children: \"CADASTRE-SE\"\n              })\n            })]\n          })]\n        })\n      })]\n    })\n  });\n}","map":{"version":3,"names":["React","useState","View","Text","Image","TextInput","ScrollView","KeyboardAvoidingView","Platform","RectButton","styles","useNavigation","userService","Storage","Messages","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Login","navigation","_useState","_useState2","_slicedToArray","email","setEmail","_useState3","_useState4","password","setPassword","keyboardVerticalOffset","OS","behavior","data","handleOnPressSend","_ref","_asyncToGenerator","checkInputs","auth","setToken","token","checkIsUserHasVehicle","error","apply","arguments","_ref2","userId","authenticatedUser","fetchVehicleByuserId","id","navigate","handleOnPressRegister","children","style","container","image_login","source","require","title","flex","height","keyboardShouldPersistTaps","content","text_Input","placeholder","onChangeText","value","keyboardType","secureTextEntry","footer","button","onPress","buttonText"],"sources":["C:/junior/projetos/dsdelivery/front-mobile/src/components/Users/Login.tsx"],"sourcesContent":["import React,{useState} from 'react'\r\nimport {View,Text,Image,TextInput,ScrollView,KeyboardAvoidingView,Platform} from 'react-native'\r\nimport { RectButton} from 'react-native-gesture-handler'\r\nimport styles from \"./styles\";\r\nimport { useNavigation } from '@react-navigation/native';\r\n//API\r\nimport userService from '../../Services/apiServices/api';\r\nimport Storage from '../../Services/storageServices/Storage';\r\n\r\nimport Messages from '../../utils/Messages';\r\n\r\nexport default function Login() {\r\n\r\n  const navigation = useNavigation()\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const keyboardVerticalOffset = Platform.OS === 'ios' ? -100 : 0\r\n  const behavior = Platform.OS === 'ios' ? \"position\" : 'position'\r\n \r\n  const data={\r\n      email:email,\r\n      password:password\r\n  }\r\n  \r\n  const handleOnPressSend=async()=>{\r\n    \r\n    if(checkInputs()===false){\r\n      return\r\n    }\r\n    try{  \r\n        var auth= await userService.auth(data);\r\n        Storage.setToken(auth.data.token); \r\n        checkIsUserHasVehicle()\r\n    }\r\n    catch(error: any)  {\r\n        Messages(\"\"+error,'danger', 'top') ;\r\n    }\r\n  }\r\n\r\n  const checkIsUserHasVehicle=async()=>{\r\n    const userId = await userService.authenticatedUser();\r\n    try{  \r\n      await userService.fetchVehicleByuserId(userId.data.id);\r\n      navigation.navigate('Orders') \r\n    }\r\n    catch(error: any)  {\r\n      Messages(\"Você não tem um veículo cadastrado.\",'danger', 'top') ;\r\n      navigation.navigate('RegisterVehicle')\r\n    }\r\n  }\r\n\r\n  const handleOnPressRegister=()=>{\r\n    navigation.navigate('Register') \r\n  }\r\n\r\n  const checkInputs=()=>{\r\n    \r\n     if(email===\"\"){\r\n       Messages('Informe o email. ', 'warning', 'top')\r\n       return false;\r\n     }\r\n     if(password===\"\"){\r\n       Messages('Informe a senha. ', 'warning', 'top')\r\n       return false;\r\n     }\r\n     return true;\r\n }\r\n\r\n  return (\r\n    <>\r\n      <View style={styles.container} >\r\n          <Image style={styles.image_login} source={require('../../assets/deliveryman.png')}/>\r\n          <Text style={styles.title}>Faça seu Login</Text>\r\n         \r\n          <KeyboardAvoidingView\r\n            style={{ flex:1 }}\r\n            behavior={behavior}\r\n            keyboardVerticalOffset={keyboardVerticalOffset}\r\n          >\r\n            <ScrollView style={{height:'100%'}} keyboardShouldPersistTaps='handled'>\r\n              <View style={styles.content}>\r\n                <TextInput style={styles.text_Input}\r\n                  placeholder=\"Email\"\r\n                  onChangeText={value => setEmail(value)}\r\n                  keyboardType={'email-address'}\r\n                />\r\n                <TextInput style={styles.text_Input} placeholder=\"Senha\"\r\n                  onChangeText={value => setPassword(value)}\r\n                  secureTextEntry={true}\r\n                />\r\n              </View>\r\n              <View style={styles.footer}>\r\n                <RectButton \r\n                  style={styles.button}\r\n                  onPress={handleOnPressSend}\r\n                >\r\n                  <Text style={styles.buttonText}>ENVIAR</Text>\r\n                </RectButton>\r\n                <RectButton \r\n                  style={styles.button}\r\n                  onPress={handleOnPressRegister}\r\n                >\r\n                  <Text style={styles.buttonText}>CADASTRE-SE</Text>\r\n                </RectButton>\r\n              </View>\r\n            </ScrollView>\r\n          </KeyboardAvoidingView>\r\n       </View>\r\n    </>\r\n  );\r\n}\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}